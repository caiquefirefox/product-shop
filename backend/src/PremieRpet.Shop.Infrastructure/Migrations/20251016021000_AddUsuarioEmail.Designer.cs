// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PremieRpet.Shop.Infrastructure;

#nullable disable

namespace PremieRpet.Shop.Infrastructure.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20251016021000_AddUsuarioEmail")]
    partial class AddUsuarioEmail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("AtualizadoPorUsuarioId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("UnidadeEntrega")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UsuarioCpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.HasIndex("AtualizadoPorUsuarioId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("AtualizadoPorUsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.PedidoStatus", "Status")
                        .WithMany("Pedidos")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<DateTimeOffset>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MicrosoftId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MicrosoftId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.UsuarioRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId", "Role")
                        .IsUnique();

                    b.ToTable("UsuarioRoles");

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("ProdutoCodigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("TipoPeso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoCodigo");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoItens");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PedidoStatus");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("AtualizadoPorUsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTimeOffset>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CriadoPorUsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid>("EspecieOpcaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FaixaEtariaOpcaoId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<int>("QuantidadeMinimaDeCompra")
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid>("TipoProdutoOpcaoId")
                        .HasColumnType("uuid");

                    b.Property<int>("TipoPeso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AtualizadoPorUsuarioId");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("CriadoPorUsuarioId");

                    b.HasIndex("EspecieOpcaoId");

                    b.HasIndex("FaixaEtariaOpcaoId");

                    b.HasIndex("TipoProdutoOpcaoId");

                    b.ToTable("Produtos");

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("AtualizadoPorUsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("CriadoPorUsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoEspecieOpcao", "EspecieOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("EspecieOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoFaixaEtariaOpcao", "FaixaEtariaOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("FaixaEtariaOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoTipoOpcao", "TipoProdutoOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoProdutoOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoEspecieOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoEspecieOpcoes");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoFaixaEtariaOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoFaixaEtariaOpcoes");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorte", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProdutoPorteOpcaoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("ProdutoPorteOpcaoId");

                    b.ToTable("ProdutoPortes");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorteOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoPorteOpcoes");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoTipoOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoTipoOpcoes");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("Historicos");

                    b.Navigation("Itens");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoStatus", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoEspecieOpcao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoFaixaEtariaOpcao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorteOpcao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoTipoOpcao", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
