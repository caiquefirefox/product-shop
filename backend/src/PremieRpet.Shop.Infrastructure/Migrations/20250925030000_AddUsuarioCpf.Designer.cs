// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PremieRpet.Shop.Infrastructure;

#nullable disable

namespace PremieRpet.Shop.Infrastructure.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20250925030000_AddUsuarioCpf")]
    partial class AddUsuarioCpf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UnidadeEntrega")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UsuarioCpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("ProdutoCodigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("TipoPeso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoCodigo");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoItens");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid>("EspecieOpcaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FaixaEtariaOpcaoId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("QuantidadeMinimaDeCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Sabores")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoPeso")
                        .HasColumnType("int");

                    b.Property<Guid>("TipoProdutoOpcaoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("EspecieOpcaoId");

                    b.HasIndex("FaixaEtariaOpcaoId");

                    b.HasIndex("TipoProdutoOpcaoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoEspecieOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoEspecieOpcoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("729ab7c1-d382-41d7-9324-8f9c4da49a98"),
                            Nome = "Cães"
                        },
                        new
                        {
                            Id = new Guid("1582b871-a8ab-404b-9745-b5d2d7b028d1"),
                            Nome = "Gato"
                        });
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoFaixaEtariaOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoFaixaEtariaOpcoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e29fa8e-f3bd-4f4a-a73c-82009fcb2998"),
                            Nome = "Filhote"
                        },
                        new
                        {
                            Id = new Guid("1bb02ce7-54c9-43c6-9d28-68c9323fc86e"),
                            Nome = "Adulto"
                        },
                        new
                        {
                            Id = new Guid("d815602e-b739-497c-bb92-2ff27c51a638"),
                            Nome = "Senior"
                        },
                        new
                        {
                            Id = new Guid("87ba6774-1929-4ada-97ec-385fc846ab51"),
                            Nome = "Todas"
                        });
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorte", b =>
                {
                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PorteOpcaoId")
                        .HasColumnType("uuid");

                    b.HasKey("ProdutoId", "PorteOpcaoId");

                    b.HasIndex("PorteOpcaoId");

                    b.ToTable("ProdutoPortes");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorteOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoPorteOpcoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d97fd958-c42a-4e45-8448-46eec579ed3c"),
                            Nome = "Pequeno"
                        },
                        new
                        {
                            Id = new Guid("ce1dc193-dc38-4805-8ba0-7cb732f4eac6"),
                            Nome = "Médio"
                        },
                        new
                        {
                            Id = new Guid("d29df7b6-989e-46e7-820b-49e221056a4c"),
                            Nome = "Grande"
                        },
                        new
                        {
                            Id = new Guid("f04e38ce-f558-4bb9-8642-6750cf8145fd"),
                            Nome = "Gigante"
                        },
                        new
                        {
                            Id = new Guid("d3541027-0408-4f9a-9937-18f4ae808fc9"),
                            Nome = "NA"
                        },
                        new
                        {
                            Id = new Guid("78c01073-e9a1-4f06-b825-2a9af0032aa6"),
                            Nome = "Mini"
                        });
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<DateTimeOffset>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MicrosoftId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("MicrosoftId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoItem", b =>
                {
                    b.HasOne("PremieRpet.Shop.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Produto", b =>
                {
                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoEspecieOpcao", "EspecieOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("EspecieOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoFaixaEtariaOpcao", "FaixaEtariaOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("FaixaEtariaOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoTipoOpcao", "TipoProdutoOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoProdutoOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EspecieOpcao");

                    b.Navigation("FaixaEtariaOpcao");

                    b.Navigation("TipoProdutoOpcao");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorte", b =>
                {
                    b.HasOne("PremieRpet.Shop.Domain.Entities.Produto", "Produto")
                        .WithMany("Portes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoPorteOpcao", "PorteOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("PorteOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PorteOpcao");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoEspecieOpcao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoFaixaEtariaOpcao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorteOpcao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoTipoOpcao", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
