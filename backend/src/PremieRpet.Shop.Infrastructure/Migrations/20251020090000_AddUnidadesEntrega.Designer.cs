// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PremieRpet.Shop.Infrastructure;

#nullable disable

namespace PremieRpet.Shop.Infrastructure.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20251020090000_AddUnidadesEntrega")]
    partial class AddUnidadesEntrega
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("AtualizadoPorUsuarioId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("UnidadeEntregaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UsuarioCpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.HasIndex("AtualizadoPorUsuarioId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UnidadeEntregaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("AtualizadoPorUsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.PedidoStatus", "Status")
                        .WithMany("Pedidos")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.UnidadeEntrega", "UnidadeEntrega")
                        .WithMany("Pedidos")
                        .HasForeignKey("UnidadeEntregaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<DateTimeOffset>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MicrosoftId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MicrosoftId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.UsuarioRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId", "Role")
                        .IsUnique();

                    b.ToTable("UsuarioRoles");

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("ProdutoCodigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("TipoPeso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoCodigo");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoItens");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.UnidadeEntrega", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("UnidadesEntrega");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f828a309-3b7a-55bb-9921-a4b3640e180b"),
                            Nome = "BAHIA"
                        },
                        new
                        {
                            Id = new Guid("1401ae7a-fd5d-5fea-978d-4b7ee0350748"),
                            Nome = "BRASCORP"
                        },
                        new
                        {
                            Id = new Guid("7f6ab4ca-bf95-569b-a9f7-c24f46ac09e2"),
                            Nome = "CD SANTANA DE PARNAÍBA"
                        },
                        new
                        {
                            Id = new Guid("9b216587-cea4-5f99-a123-d519be4b6925"),
                            Nome = "DISTRITO FEDERAL"
                        },
                        new
                        {
                            Id = new Guid("4e2c96fa-585a-5d39-9bf3-39b3ef473e7b"),
                            Nome = "GOIÁS"
                        },
                        new
                        {
                            Id = new Guid("083eb7fc-8fa1-517f-8aec-1e20b779cdb2"),
                            Nome = "PARANÁ"
                        },
                        new
                        {
                            Id = new Guid("c30f2dd6-8741-58e2-a65b-881435ff701f"),
                            Nome = "PERNAMBUCO"
                        },
                        new
                        {
                            Id = new Guid("41f894cd-6c17-566f-bd08-6ad8eb97e9d9"),
                            Nome = "PREMIER ESCRITÓRIO - SP"
                        },
                        new
                        {
                            Id = new Guid("06fd3c2b-6c72-5f94-893d-e63466d0e34d"),
                            Nome = "PREMIER INTERIOR - SP"
                        },
                        new
                        {
                            Id = new Guid("784332e4-5052-5314-b7c2-4e6fd7f20255"),
                            Nome = "PREMIER LITORAL - SP"
                        },
                        new
                        {
                            Id = new Guid("595407a3-c4f7-5639-aa7c-a1befb4d6e70"),
                            Nome = "RIO DE JANEIRO"
                        },
                        new
                        {
                            Id = new Guid("6f208b53-e62b-576a-8de4-fbf673db66aa"),
                            Nome = "RIO GRANDE DO SUL"
                        },
                        new
                        {
                            Id = new Guid("e1f1e75f-3818-5022-b0f8-3b2060ca2ac1"),
                            Nome = "SANTA CATARINA"
                        },
                        new
                        {
                            Id = new Guid("737aed3e-dc2e-5534-9456-986f1b7db715"),
                            Nome = "CD BETIM - MG"
                        },
                        new
                        {
                            Id = new Guid("0c63cefe-5b6b-57f9-b073-a035d292d864"),
                            Nome = "RIO GRANDE DO NORTE"
                        },
                        new
                        {
                            Id = new Guid("bcb84da6-c993-54e7-8c14-665f89d70433"),
                            Nome = "CD EXTREMA - MG"
                        },
                        new
                        {
                            Id = new Guid("1acb4bc4-8c07-5aea-895d-5a8657ae8dbb"),
                            Nome = "CEARÁ"
                        },
                        new
                        {
                            Id = new Guid("dce4840f-14c4-59d0-8a23-a03df0705d3c"),
                            Nome = "FÁBRICA PARANÁ"
                        },
                        new
                        {
                            Id = new Guid("1d7f3994-a00a-56a6-aa07-09b593ede157"),
                            Nome = "FÁBRICA DOURADO"
                        });
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoHistorico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Detalhes")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioNome")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PedidoHistoricos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.ToTable("PedidoStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Solicitado"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Aprovado"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Cancelado"
                        });
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid>("EspecieOpcaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FaixaEtariaOpcaoId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<DateTimeOffset?>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("AtualizadoPorUsuarioId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("QuantidadeMinimaDeCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Sabores")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoPeso")
                        .HasColumnType("int");

                    b.Property<Guid>("TipoProdutoOpcaoId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CriadoPorUsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AtualizadoPorUsuarioId");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("EspecieOpcaoId");

                    b.HasIndex("FaixaEtariaOpcaoId");

                    b.HasIndex("CriadoPorUsuarioId");

                    b.HasIndex("TipoProdutoOpcaoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoEspecieOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoEspecieOpcoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("729ab7c1-d382-41d7-9324-8f9c4da49a98"),
                            Nome = "Cães"
                        },
                        new
                        {
                            Id = new Guid("1582b871-a8ab-404b-9745-b5d2d7b028d1"),
                            Nome = "Gato"
                        });
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoFaixaEtariaOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoFaixaEtariaOpcoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e29fa8e-f3bd-4f4a-a73c-82009fcb2998"),
                            Nome = "Filhote"
                        },
                        new
                        {
                            Id = new Guid("1bb02ce7-54c9-43c6-9d28-68c9323fc86e"),
                            Nome = "Adulto"
                        },
                        new
                        {
                            Id = new Guid("d815602e-b739-497c-bb92-2ff27c51a638"),
                            Nome = "Senior"
                        },
                        new
                        {
                            Id = new Guid("87ba6774-1929-4ada-97ec-385fc846ab51"),
                            Nome = "Todas"
                        });
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorte", b =>
                {
                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PorteOpcaoId")
                        .HasColumnType("uuid");

                    b.HasKey("ProdutoId", "PorteOpcaoId");

                    b.HasIndex("PorteOpcaoId");

                    b.ToTable("ProdutoPortes");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorteOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoPorteOpcoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d97fd958-c42a-4e45-8448-46eec579ed3c"),
                            Nome = "Pequeno"
                        },
                        new
                        {
                            Id = new Guid("ce1dc193-dc38-4805-8ba0-7cb732f4eac6"),
                            Nome = "Médio"
                        },
                        new
                        {
                            Id = new Guid("d29df7b6-989e-46e7-820b-49e221056a4c"),
                            Nome = "Grande"
                        },
                        new
                        {
                            Id = new Guid("f04e38ce-f558-4bb9-8642-6750cf8145fd"),
                            Nome = "Gigante"
                        },
                        new
                        {
                            Id = new Guid("d3541027-0408-4f9a-9937-18f4ae808fc9"),
                            Nome = "NA"
                        },
                        new
                        {
                            Id = new Guid("78c01073-e9a1-4f06-b825-2a9af0032aa6"),
                            Nome = "Mini"
                        });
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoTipoOpcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ProdutoTipoOpcoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5006ea85-e9b1-4185-ba5d-08cecbcaf998"),
                            Nome = "Alimento Seco"
                        },
                        new
                        {
                            Id = new Guid("1e2e7740-36e1-4961-96a5-308c6e48b457"),
                            Nome = "Cookie"
                        },
                        new
                        {
                            Id = new Guid("601026f0-606b-4f67-bad7-eaefa16c62c6"),
                            Nome = "Alimento Úmido"
                        });
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoItem", b =>
                {
                    b.HasOne("PremieRpet.Shop.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoHistorico", b =>
                {
                    b.HasOne("PremieRpet.Shop.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Historicos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Pedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Produto", b =>
                {
                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("AtualizadoPorUsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Produtos_Usuarios_AtualizadoPorUsuarioId");

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("CriadoPorUsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Produtos_Usuarios_CriadoPorUsuarioId");

                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoEspecieOpcao", "EspecieOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("EspecieOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoFaixaEtariaOpcao", "FaixaEtariaOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("FaixaEtariaOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoTipoOpcao", "TipoProdutoOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoProdutoOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EspecieOpcao");

                    b.Navigation("FaixaEtariaOpcao");

                    b.Navigation("TipoProdutoOpcao");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorte", b =>
                {
                    b.HasOne("PremieRpet.Shop.Domain.Entities.ProdutoPorteOpcao", "PorteOpcao")
                        .WithMany("Produtos")
                        .HasForeignKey("PorteOpcaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PremieRpet.Shop.Domain.Entities.Produto", "Produto")
                        .WithMany("Portes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PorteOpcao");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("Historicos");
                    b.Navigation("Itens");
                    b.Navigation("Status");
                    b.Navigation("UnidadeEntrega");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.PedidoStatus", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Produto", b =>
                {
                    b.Navigation("Portes");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoEspecieOpcao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoFaixaEtariaOpcao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoPorteOpcao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.ProdutoTipoOpcao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.UnidadeEntrega", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("PremieRpet.Shop.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
